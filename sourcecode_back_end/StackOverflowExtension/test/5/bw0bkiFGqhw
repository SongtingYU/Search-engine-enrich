- [Voiceover] Now that we have a good select option on our form, we're ready to write the code to process the form value. In real life, you'd probably wanna store this value with the user's data in a database so that it can stick around. But rather than go to the processes setting up a database for this small project, we're gonna use something simpler. We're gonna use PHP's session to store the value. That allow us to be able to set it and retrieve it. And to simulate what it would be like if we have a full database. The way that we use sessions in PHP is we first have to tell PHP to start the sessions.

And we do that with session_start. That function will tell PHP to make sessions available to us. After that, we can call the sessions super global to access the sessions. Dollar sign, underscore, all capital Session and then in square brackets, the string that identifies the value that we either want to set or retrieve. It's called the session key. I'm gonna be using user_tz_ident to store the user's timezone identifier. Let's turn on our sessions and write the form processing code.

So the very top of my index.php file, I'm gonna add session_start. And that's gonna tell PHP to start on my sessions. Now if you're using this in a project, you'd wanna do that in a common file so that sessions are available throughout your project. Then after I got my function, I'm going to first initialize user_tz_ident as a variable equal to null by default. Then I'm going to do my form processing. If the form has been submitted to us, in which case Post, submit should be present in the values.

And the reason why that is is because I have a Submit button down here which has name equals submit. So that name will be present. This is actually optional. You can leave that out in your formal work just fine. It just won't submit a value for the Submit button. This allows me to know that the Submit button was clicked and that the form has been submitted. So if that's the case, then let's save the TZ choice, else, let's check for previous TZ settings. Okay, so let's talk about how to save the choice.

The simplest way to do this would be to tell the sessions super global. And then for a key, we're gonna use the same thing as this variable. It's gonna be user_tz_ident. We're gonna set it equal to the value that came through on the post for tz_choice. That's the name that we use for our Select option. That would do the trick for us. So it'd put it in a session. I'm going to make something a little nicer than that. I'm gonna take this out. So let's add tz_choice. And then tz_choice again here.

I'm breaking it into two parts. And the reason why is because before I actually perform the setting of that value, because I only want to accept the value if it is the list. So I'm gonna write an if statement, if in array, and I'm gonna be checking to see is tz_choice in the array, tz_ident, the one that's up here, right? So it's gonna make sure that it is a valid value. I can't just be sent anything. So I can't hack my form and send me some other value.

It is going to be a valid identifier before I save it. And then once I saved it, that only means I save it but I'm going to also use it right now. I'm gonna tell this tz_ident that that is the current user's value. Now, if we're checking for previous settings, then we wanna check and see if is set. Let's grab this value right here. Check to see if that's set. And if it is, then we wanna say user_tz_ident equal to the session value.

Okay, so that should process our form. Submit it. It will figure out whether the form has been submitted or not and it will save it or retrieve it but we should now have a user_tz_ident value set. But we don't see that value anymore. There's no place on our page where we're seeing it. We could simply echo it back so that we could take a peek at it. But I'm gonna go ahead and put it here in my form because my options here contain that value. I just have to tell it which one of the options have been selected. So what I'm gonna do is I'm gonna take this option here and I'm going to add selected if it's been selected or not.

So I'm gonna make that conditional. The way I'm gonna do that is I'm just gonna put a double quote in here to get return to break this on to a new line. So this is still functioning the same at the moment. But now I'm gonna add another line here that says if user_tz_ident is equal to the zone, if it's exactly the same, then we're gonna echo back a string that is space, selected. You do need that space in that. So there it is. If it matches, it's gonna drop in this text and make that the selected value.